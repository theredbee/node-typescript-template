{
  "root": true, // Important: Tells ESLint to stop looking for configs in parent folders.
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json" // Important: Allows for rules that require type information.
  },
  "env": {
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended-type-checked", // Stricter version that requires type info.
    "plugin:import/recommended",
    "plugin:import/typescript",
    "prettier" // This must be the last extension.
  ],
  "plugins": ["@typescript-eslint/eslint-plugin", "import"],
  "settings": {
    "import/resolver": {
      "typescript": {
        "project": "./tsconfig.json"
      }
    }
  },
  "rules": {
    // ---- (Optional) Overrides for stricter recommended rules ----
    // If you want to be even stricter, you can remove these overrides.
    // These are often turned off for legacy codebases but are good for new projects.
    "@typescript-eslint/no-unused-vars": [
      "error",
      {"argsIgnorePattern": "^_", "varsIgnorePattern": "^_"}
    ],
    "@typescript-eslint/no-explicit-any": "warn", // Warn instead of error on 'any' type.

    // ---- Rules for Import Sorting ----
    "import/order": [
      "error",
      {
        "groups": [
          "builtin", // Built-in Node.js modules (fs, path)
          "external", // Packages from node_modules
          "internal", // Your own aliased modules (@/...)
          "parent", // Parent imports (../)
          "sibling", // Sibling imports (./)
          "index", // Index file (./index)
          "object", // Imports from 'object' (rare)
          "type" // Type imports (import type ...)
        ],
        "newlines-between": "always", // Enforce newlines between groups
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],

    // ---- Other Recommended Rules ----
    "no-console": "warn" // Warn about console.log statements
  }
}
